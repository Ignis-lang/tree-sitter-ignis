================================================================================
VALID - Decorator declaration
================================================================================

decorator Only(IgnisLanguageSupported);

--------------------------------------------------------------------------------

(source_file
  (decorator_declaration
    (identifier)
    (type_expression
      (type_identifier
        (identifier)))))

================================================================================
VALID - Export decorator declaration
================================================================================

export decorator Only(IgnisLanguageSupported);

--------------------------------------------------------------------------------

(source_file
  (export_statement
    (decorator_declaration
      (identifier)
      (type_expression
        (type_identifier
          (identifier))))))

================================================================================
VALID - Use decorator
================================================================================

@Only

--------------------------------------------------------------------------------

(source_file
  (decorator_use
    (identifier)))

================================================================================
VALID - Use decorator with params
================================================================================


@Only(IgnisLanguageSupported.LUA)

--------------------------------------------------------------------------------

(source_file
  (decorator_use
    (identifier)
    (expression
      (get_expression
        (property_access
          (expression
            (primary_expression
              (identifier)))
          (identifier))))))

================================================================================
VALID - Use decorator with multi params
================================================================================

@Only("test", "test1")

--------------------------------------------------------------------------------

(source_file
  (decorator_use
    (identifier)
    (expression
      (primary_expression
        (literal
          (string_literal))))
    (expression
      (primary_expression
        (literal
          (string_literal))))))

================================================================================
VALID - Use decorator with record param
================================================================================

@Language({
  language: IgnisLanguageSupported.LUA,
  type: ExternDeclarationType.FUNCTION,
  name: "print",
  params: [
    { name: "s", type: LuaType.ANY }
  ],
  returnType: LuaType.NONE,
  requireImport: false,
})

--------------------------------------------------------------------------------

(source_file
  (decorator_use
    (identifier)
    (expression
      (primary_expression
        (literal
          (object_literal
            (identifier)
            (expression
              (get_expression
                (property_access
                  (expression
                    (primary_expression
                      (identifier)))
                  (identifier))))
            (identifier)
            (expression
              (get_expression
                (property_access
                  (expression
                    (primary_expression
                      (identifier)))
                  (identifier))))
            (identifier)
            (expression
              (primary_expression
                (literal
                  (string_literal))))
            (identifier)
            (expression
              (primary_expression
                (literal
                  (array_literal
                    (expression
                      (primary_expression
                        (literal
                          (object_literal
                            (identifier)
                            (expression
                              (primary_expression
                                (literal
                                  (string_literal))))
                            (identifier)
                            (expression
                              (get_expression
                                (property_access
                                  (expression
                                    (primary_expression
                                      (identifier)))
                                  (identifier))))))))))))
            (identifier)
            (expression
              (get_expression
                (property_access
                  (expression
                    (primary_expression
                      (identifier)))
                  (identifier))))
            (identifier)
            (expression
              (primary_expression
                (literal
                  (boolean_literal))))))))))
